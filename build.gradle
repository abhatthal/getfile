/*
 * getfile dependencies
 */

plugins {
	id 'java-library'
	id 'eclipse'
	id 'com.github.johnrengelman.shadow' version '8.1.1'	
}

ext {
	parentProject = null
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11) // Use JDK 11 for builds
	}
	sourceCompatibility = JavaVersion.VERSION_11 // Source code uses Java 11 syntax
	targetCompatibility = JavaVersion.VERSION_11 // Compiled bytecode targets Java 11 JVMs
}

compileJava.options.encoding = "UTF-8"

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

dependencies {
	// Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
	// https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock
	testImplementation 'com.github.tomakehurst:wiremock:3.0.1'

	//testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	api 'com.google.code.gson:gson:2.8.9'

	// This dependency is used by the application.
	implementation libs.guava
	// https://mvnrepository.com/artifact/commons-io/commons-io
	implementation 'commons-io:commons-io:2.17.0'
	// https://mvnrepository.com/artifact/commons-codec/commons-codec
	implementation 'commons-codec:commons-codec:1.17.1'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation 'org.apache.commons:commons-lang3:3.17.0'
}

tasks.named('test') {
	// Use JUnit Platform for unit tests.
	useJUnitPlatform()
	// Run tests sequentially to avoid WireMock port conflicts
    maxParallelForks = 1
    forkEvery = 1
}

tasks.javadoc {
	// Generate documentation from code to build/docs with `gradle javadoc`
    destinationDir = file("$buildDir/docs")
}

tasks.jar {
    destinationDirectory.set(file("$rootDir/libs"))
}
shadowJar {
	destinationDirectory.set(file("$rootDir/libs"))
}

// `gradle build` will update API docs and build fresh JARs.
// Make sure to update the `libs.json` to update GetFile version.
// Once an updated version is available, clients may update to latest version.
tasks.build {
	dependsOn(tasks.jar, tasks.shadowJar, tasks.javadoc)
}

